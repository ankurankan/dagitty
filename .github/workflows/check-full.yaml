on: [push, pull_request]

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macOS-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,   r: 'release'}
          - {os: macOS-latest,   r: 'devel'}
          - {os: windows-latest, r: 'devel'}
          - {os: ubuntu-latest,   r: 'devel'}


    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master
      
      - name: Install system dependencies for Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install libcurl4-openssl-dev libv8-dev

      - name: Install dependencies
        run: |
          install.packages("remotes")
          remotes::install_cran(c("V8", "jsonlite", "boot", "MASS", "knitr", "lavaan", "testthat"), dependencies=TRUE)
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}

      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - name: Check
        run: |
          rcmdcheck::rcmdcheck("r", args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash
